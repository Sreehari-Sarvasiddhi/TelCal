name: CI Maven Build

# Trigger the workflow on push to the main branch or pull requests
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Java JDK 17 (or the version you're using)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Cache Maven dependencies to speed up builds
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-${{ hashFiles('**/src/**/*') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      
      # Run Maven build and package
      - name: Build with Maven
        run: mvn clean install

      # Optionally, run unit tests
      - name: Run Tests
        run: mvn test

      # Create a settings.xml file with GitHub Packages configuration
      - name: Create settings.xml
        run: |
          mkdir -p ~/.m2
          cat <<EOF > ~/.m2/settings.xml
					<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
					xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
					xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
										http://maven.apache.org/xsd/settings-1.0.0.xsd">
					
					<activeProfiles>
						<activeProfile>github</activeProfile>
					</activeProfiles>
					
					<profiles>
						<profile>
						<id>github</id>
						<repositories>
							<repository>
							<id>central</id>
							<url>https://repo1.maven.org/maven2</url>
							</repository>
							<repository>
							<id>github</id>
							<url>https://maven.pkg.github.com/Sreehari-Sarvasiddhi/TelCal</url>
							<snapshots>
								<enabled>true</enabled>
							</snapshots>
							</repository>
						</repositories>
						</profile>
					</profiles>
					
					<servers>
						<server>
						<id>github</id>
						<username>USERNAME</username>
						<password>TOKEN</password>
						</server>
					</servers>
					</settings>
          EOF

      # Publish to GitHub Packages
      - name: Publish to GitHub Packages
        run: mvn deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
